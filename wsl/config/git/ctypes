#!/bin/bash

# Define commit types
FEAT="‚ú® FEAT: "
FIX="üêõ FIX: "
REFACTOR="‚ôªÔ∏è REFACTOR: "
DOCS="üìù DOCS: "
STYLE="üíÖ STYLE: "
PERF="‚ö°Ô∏è PERF: "
TEST="üî¨ TEST: "
CHORE="üîß CHORE: "

# Function to commit with a message
gcm() {
    # Verify that only 2 arguments are passed
    if [ "$#" -ne 2 ]; then
        echo "Usage: gcm <type> <message>"
        echo "Available type: FEAT, FIX, REFACTOR, DOCS, STYLE, PERF, TEST, CHORE"
        return 1
    fi

    # Check if the type is valid
    local type
    case "$1" in
        FEAT|f) type="$FEAT" ;;
        FIX|b) type="$FIX" ;;
        REFACTOR|r) type="$REFACTOR" ;;
        DOCS|d) type="$DOCS" ;;
        STYLE|s) type="$STYLE" ;;
        PERF|p) type="$PERF" ;;
        TEST|t) type="$TEST" ;;
        CHORE|c) type="$CHORE" ;;
        *)
            echo "Invalid type: $1"
            echo "Valid types: FEAT, FIX, REFACTOR, DOCS, STYLE, PERF, TEST, CHORE"
            return 1
            ;;
    esac

    # Commit with the constructed message
    git commit -m "$type $2"
}

# Function to add all changes and commit with a message
gcam() {
    git add .
    gcm "$1" "$2"
}
